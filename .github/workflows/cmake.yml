name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install GTests
      run: sudo apt-get install libgtest-dev

    - name: Install lit-tests
      run: pip3 install lit

    - name: Install FileCheck
      run: sudo apt-get install llvm-10-tools

    - name: Install Vulkan0
      run: wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -

    - name: Install Vulkan1
      run: sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list

    - name: Install Vulkan2
      run: sudo apt update

    - name: Install Vulkan3
      run: sudo apt install vulkan-sdk

    - name: Install Vulkan
      run: sudo apt install spirv-tools libglfw3-dev libglm-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=clang++-12 -DBUILD_DOC=OFF -DBUILD_TESTS=ON -DSKIP_CLANG_FORMAT=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run unit tests
      working-directory: ${{github.workspace}}/build/
      run: ctest -VV -L unit

    - name: Run e2e tests
      working-directory: ${{github.workspace}}/build/
      run: ctest -VV -L e2e
